import { useState } from 'react';
import { User, Heart, Calendar, Settings, LogOut, Phone, Mail, MapPin, Edit } from 'lucide-react';
import { XButton, XModal, XInput, useToast } from 'x-app-ui';

export default function Account() {
    const [user] = useState({
        name: 'Nguy·ªÖn VƒÉn A',
        email: 'nguyenvana@email.com',
        phone: '0123456789',
        dateOfBirth: '01/01/1990',
        address: 'H√† N·ªôi, Vi·ªát Nam',
        avatar: 'üë§'
    });

    const [healthStats] = useState({
        height: '170 cm',
        weight: '70 kg',
        bloodType: 'O+',
        allergies: 'Kh√¥ng c√≥'
    });

    const [showEditModal, setShowEditModal] = useState(false);
    const [showLogoutModal, setShowLogoutModal] = useState(false);
    const { showToast } = useToast();

    const menuItems = [
        {
            icon: Calendar,
            title: 'L·ªãch s·ª≠ kh√°m b·ªánh',
            description: 'Xem l·∫°i c√°c l·∫ßn kh√°m tr∆∞·ªõc',
            action: () => showToast('T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn', { status: 'info' })
        },
        {
            icon: Heart,
            title: 'Ch·ªâ s·ªë s·ª©c kh·ªèe',
            description: 'Theo d√µi c√°c ch·ªâ s·ªë y t·∫ø',
            action: () => showToast('T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn', { status: 'info' })
        },
        {
            icon: Settings,
            title: 'C√†i ƒë·∫∑t',
            description: 'T√πy ch·ªânh ·ª©ng d·ª•ng',
            action: () => showToast('T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn', { status: 'info' })
        }
    ];

    const handleLogout = () => {
        // In real app, clear authentication tokens
        setShowLogoutModal(false);
        showToast('ƒêƒÉng xu·∫•t th√†nh c√¥ng', { status: 'success' });
    };

    return (
        <div className="xa:bg-gray-50 xa:min-h-screen">
            {/* Header */}
            <div className="xa:bg-blue-600 xa:text-white xa:p-4">
                <h1 className="xa:text-xl xa:font-bold">T√†i kho·∫£n</h1>
                <p className="xa:text-blue-100">Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n</p>
            </div>

            <div className="xa:p-4 xa:space-y-6">
                {/* Profile Section */}
                <div className="xa:bg-white xa:p-6 xa:rounded-lg xa:shadow-sm xa:border xa:border-gray-200">
                    <div className="xa:flex xa:items-center xa:space-x-4">
                        <div className="xa:text-4xl">{user.avatar}</div>
                        <div className="xa:flex-1">
                            <h2 className="xa:text-xl xa:font-bold xa:text-gray-900">{user.name}</h2>
                            <p className="xa:text-gray-600">{user.email}</p>
                        </div>
                        <XButton 
                            variant="neutral" 
                            level="secondary" 
                            size="small"
                            onClick={() => setShowEditModal(true)}
                        >
                            <Edit size={16} className="xa:mr-1" />
                            S·ª≠a
                        </XButton>
                    </div>
                </div>

                {/* Personal Information */}
                <div className="xa:bg-white xa:p-6 xa:rounded-lg xa:shadow-sm xa:border xa:border-gray-200">
                    <h3 className="xa:text-lg xa:font-semibold xa:mb-4">Th√¥ng tin c√° nh√¢n</h3>
                    <div className="xa:space-y-4">
                        <div className="xa:flex xa:items-center xa:space-x-3">
                            <Phone size={20} className="xa:text-gray-500" />
                            <div>
                                <p className="xa:text-sm xa:text-gray-600">S·ªë ƒëi·ªán tho·∫°i</p>
                                <p className="xa:font-medium">{user.phone}</p>
                            </div>
                        </div>
                        <div className="xa:flex xa:items-center xa:space-x-3">
                            <Mail size={20} className="xa:text-gray-500" />
                            <div>
                                <p className="xa:text-sm xa:text-gray-600">Email</p>
                                <p className="xa:font-medium">{user.email}</p>
                            </div>
                        </div>
                        <div className="xa:flex xa:items-center xa:space-x-3">
                            <User size={20} className="xa:text-gray-500" />
                            <div>
                                <p className="xa:text-sm xa:text-gray-600">Ng√†y sinh</p>
                                <p className="xa:font-medium">{user.dateOfBirth}</p>
                            </div>
                        </div>
                        <div className="xa:flex xa:items-center xa:space-x-3">
                            <MapPin size={20} className="xa:text-gray-500" />
                            <div>
                                <p className="xa:text-sm xa:text-gray-600">ƒê·ªãa ch·ªâ</p>
                                <p className="xa:font-medium">{user.address}</p>
                            </div>
                        </div>
                    </div>
                </div>

                {/* Health Information */}
                <div className="xa:bg-white xa:p-6 xa:rounded-lg xa:shadow-sm xa:border xa:border-gray-200">
                    <h3 className="xa:text-lg xa:font-semibold xa:mb-4">Th√¥ng tin s·ª©c kh·ªèe</h3>
                    <div className="xa:grid xa:grid-cols-2 xa:gap-4">
                        <div>
                            <p className="xa:text-sm xa:text-gray-600">Chi·ªÅu cao</p>
                            <p className="xa:font-medium">{healthStats.height}</p>
                        </div>
                        <div>
                            <p className="xa:text-sm xa:text-gray-600">C√¢n n·∫∑ng</p>
                            <p className="xa:font-medium">{healthStats.weight}</p>
                        </div>
                        <div>
                            <p className="xa:text-sm xa:text-gray-600">Nh√≥m m√°u</p>
                            <p className="xa:font-medium">{healthStats.bloodType}</p>
                        </div>
                        <div>
                            <p className="xa:text-sm xa:text-gray-600">D·ªã ·ª©ng</p>
                            <p className="xa:font-medium">{healthStats.allergies}</p>
                        </div>
                    </div>
                </div>

                {/* Menu Items */}
                <div className="xa:bg-white xa:rounded-lg xa:shadow-sm xa:border xa:border-gray-200 xa:overflow-hidden">
                    {menuItems.map((item, index) => {
                        const IconComponent = item.icon;
                        return (
                            <div 
                                key={index}
                                className="xa:p-4 xa:border-b xa:border-gray-200 xa:last:border-b-0 xa:cursor-pointer xa:hover:bg-gray-50"
                                onClick={item.action}
                            >
                                <div className="xa:flex xa:items-center xa:space-x-3">
                                    <IconComponent size={20} className="xa:text-gray-500" />
                                    <div className="xa:flex-1">
                                        <h4 className="xa:font-medium xa:text-gray-900">{item.title}</h4>
                                        <p className="xa:text-sm xa:text-gray-600">{item.description}</p>
                                    </div>
                                    <div className="xa:text-gray-400">‚Ä∫</div>
                                </div>
                            </div>
                        );
                    })}
                </div>

                {/* Logout Button */}
                <XButton 
                    variant="danger" 
                    level="secondary" 
                    className="xa:w-full"
                    onClick={() => setShowLogoutModal(true)}
                >
                    <LogOut size={20} className="xa:mr-2" />
                    ƒêƒÉng xu·∫•t
                </XButton>
            </div>

            {/* Edit Profile Modal */}
            <XModal
                isOpen={showEditModal}
                onClose={() => setShowEditModal(false)}
                title="Ch·ªânh s·ª≠a th√¥ng tin"
            >
                <div className="xa:space-y-4">
                    <XInput label="H·ªç v√† t√™n" defaultValue={user.name} />
                    <XInput label="S·ªë ƒëi·ªán tho·∫°i" defaultValue={user.phone} />
                    <XInput label="ƒê·ªãa ch·ªâ" defaultValue={user.address} />
                    <div className="xa:flex xa:space-x-3">
                        <XButton variant="neutral" level="secondary" className="xa:flex-1" onClick={() => setShowEditModal(false)}>
                            H·ªßy
                        </XButton>
                        <XButton variant="highlight" className="xa:flex-1" onClick={() => {
                            setShowEditModal(false);
                            showToast('C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng', { status: 'success' });
                        }}>
                            L∆∞u
                        </XButton>
                    </div>
                </div>
            </XModal>

            {/* Logout Confirmation Modal */}
            <XModal
                isOpen={showLogoutModal}
                onClose={() => setShowLogoutModal(false)}
                title="X√°c nh·∫≠n ƒëƒÉng xu·∫•t"
            >
                <div className="xa:space-y-4">
                    <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh·ªèi ·ª©ng d·ª•ng?</p>
                    <div className="xa:flex xa:space-x-3">
                        <XButton variant="neutral" level="secondary" className="xa:flex-1" onClick={() => setShowLogoutModal(false)}>
                            H·ªßy
                        </XButton>
                        <XButton variant="danger" className="xa:flex-1" onClick={handleLogout}>
                            ƒêƒÉng xu·∫•t
                        </XButton>
                    </div>
                </div>
            </XModal>
        </div>
    );
}
